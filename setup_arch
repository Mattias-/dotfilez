#!/bin/bash
set -euo pipefail

packages=(
    curl
    jq
    git
    vim
    bc
    go
    tmux
    neovim
    bash-completion
    htop
    tree
    fzf
    unzip
    fuse2
    rclone
    pacman-contrib
    reflector
    neofetch

    nmap
    traceroute
    whois
    dnsutils
    ufw
    openssh
    iperf3
    gnu-netcat
    inetutils

    python
    python-pip
    python-pipenv
    python2

    sway
    swayidle
    swaylock
    xorg-server-xwayland
    grim
    slurp
    dmenu
    waybar
    wl-clipboard

    light
    pavucontrol
    pulseaudio
    pulseaudio-alsa
    pulseaudio-bluetooth
    bluez-utils

    shellcheck
    shfmt
    helm
    github-cli
    terraform
    vagrant
    packer
    hub
    docker
    virtualbox
    virtualbox-host-modules-arch
    grc

    keepassxc
    firefox
    transmission-qt
    alacritty
    ttf-inconsolata
    ttf-dejavu
    ttf-liberation
    ttf-roboto
    noto-fonts-emoji
)

aur_packages=(
    pikaur
    pipes.sh
    google-cloud-sdk
    cfssl
    ttf-font-awesome-4
    yq2-bin
    aws-cli-v2-bin
    aws-session-manager-plugin

    google-chrome
    spotify-dev

    kubectl-bin
    minikube-bin
    kind-bin
)

pip_packages=(
    neovim
    pynvim
    black
    yamllint
)

main() {
    mkdir -p ~/screenshots
    mkdir -p ~/projects
    mkdir -p ~/mnt
    mkdir -p ~/bin

    sudo timedatectl set-ntp true
    sudo pacman -Syu --needed "${packages[@]}"
    sudo usermod -aG docker "$USER"
    sudo systemctl enable --now docker
    configure_backlight
    install_pikaur
    pikaur -S "${aur_packages[@]}"
    pip3 install --user --upgrade "${pip_packages[@]}"
    install_hyper
    configure_iptables
}

configure_backlight() {
    sudo pacman -S --needed light
    sudo usermod -aG video "$USER"

    # Add udev rule for light command
    sudo tee /usr/lib/udev/rules.d/90-backlight.rules >/dev/null <<EOF
ACTION=="add", SUBSYSTEM=="backlight", RUN+="/bin/chgrp video /sys/class/backlight/%k/brightness"
ACTION=="add", SUBSYSTEM=="backlight", RUN+="/bin/chmod g+w /sys/class/backlight/%k/brightness"
ACTION=="add", SUBSYSTEM=="leds", RUN+="/bin/chgrp video /sys/class/leds/%k/brightness"
ACTION=="add", SUBSYSTEM=="leds", RUN+="/bin/chmod g+w /sys/class/leds/%k/brightness"
EOF
}

install_pikaur() {
    if command -v pikaur >/dev/null; then
        return 0
    fi
    d="/tmp/pikaur"
    rm -rf "$d"
    git clone https://aur.archlinux.org/pikaur.git "$d"
    (
        cd "$d"
        makepkg -fsri --noconfirm
    )
    rm -rf "$d"
}

install_session_manager_plugin() {
    if command -v session-manager-plugin >/dev/null; then
        return 0
    fi
    d="/tmp/ssm"
    mkdir -p "$d"
    (
        cd "$d" || exit 1
        curl -s -L -O "https://s3.amazonaws.com/session-manager-downloads/plugin/latest/ubuntu_64bit/session-manager-plugin.deb"
        ar x session-manager-plugin.deb data.tar.gz
        tar -xf data.tar.gz
        sudo cp usr/local/sessionmanagerplugin/bin/session-manager-plugin /usr/local/bin/
    )
    rm -rf "$d"
}

install_hyper() {
    if command -v hyper >/dev/null; then
        return 0
    fi
    curl -Lo "$HOME/bin/hyper" https://releases.hyper.is/download/AppImage
    chmod +x "$HOME/bin/hyper"
}

configure_iptables() {
    sudo cp "$HOME/dotfilez/iptables.rules" /etc/iptables/iptables.rules
    sudo systemctl enable --now iptables
}

main
