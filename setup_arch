#!/bin/bash
set -euo pipefail

source ./packages.sh

main() {
    mkdir -p ~/screenshots
    mkdir -p ~/projects
    mkdir -p ~/mnt
    mkdir -p ~/bin

    install_arch_packages

    install_go_packages
    install_python_packages
    setup_node
    install_node_packages

    configure_arch

    nvim +":PlugInstall" +qall
    nvim +":helptags ALL" +qall
    ln -sf "$(command -v nvim)" "$HOME/bin/vi"
    ln -sf "$(command -v nvim)" "$HOME/bin/vim"
}

install_go_packages() {
    # shellcheck disable=SC2154
    for go_package in "${go_packages[@]}"; do
        go install "$go_package"
    done
}

install_python_packages() {
    # shellcheck disable=SC2154
    pip3 install --user --upgrade "${pip_packages[@]}"
}

install_node_packages() {
    # shellcheck disable=SC2154
    npm install -g "${npm_packages[@]}"
}

setup_node() {
    fnm install --lts
    fnm default lts-latest
    eval "$(fnm env --shell bash)"
    npm install -g npm@latest
    npm completion | sudo tee /etc/bash_completion.d/npm >/dev/null
    corepack enable
}

install_arch_packages() {
    # shellcheck disable=SC2154
    sudo pacman -Syu --needed "${pacman_packages[@]}"
    install_pikaur
    # shellcheck disable=SC2154
    pikaur --noedit -S "${aur_packages[@]}"
    # shellcheck disable=SC2154
    pikaur -Rsu "${uninstalled_aur_packages[@]}" || true
}

configure_backlight() {
    sudo pacman -S --needed light
    sudo usermod -aG video "$USER"

    # Add udev rule for light command
    sudo tee /usr/lib/udev/rules.d/90-backlight.rules >/dev/null <<EOF
ACTION=="add", SUBSYSTEM=="backlight", RUN+="/bin/chgrp video /sys/class/backlight/%k/brightness"
ACTION=="add", SUBSYSTEM=="backlight", RUN+="/bin/chmod g+w /sys/class/backlight/%k/brightness"
ACTION=="add", SUBSYSTEM=="leds", RUN+="/bin/chgrp video /sys/class/leds/%k/brightness"
ACTION=="add", SUBSYSTEM=="leds", RUN+="/bin/chmod g+w /sys/class/leds/%k/brightness"
EOF
}

install_pikaur() {
    if command -v pikaur >/dev/null; then
        return 0
    fi
    d="/tmp/pikaur"
    rm -rf "$d"
    git clone https://aur.archlinux.org/pikaur.git "$d"
    (
        cd "$d"
        makepkg -fsri --noconfirm
    )
    rm -rf "$d"
}

install_hyper() {
    if command -v hyper >/dev/null; then
        return 0
    fi
    curl -Lo "$HOME/bin/hyper" https://releases.hyper.is/download/AppImage
    chmod +x "$HOME/bin/hyper"
}

configure_iptables() {
    sudo cp "$HOME/dotfilez/iptables.rules" /etc/iptables/iptables.rules
    sudo systemctl enable --now iptables
}

configure_arch() {
    sudo timedatectl set-ntp true
    sudo usermod -aG docker,wireshark "$USER"
    sudo systemctl enable --now docker
    configure_backlight
    configure_iptables
    sudo ln -sf /run/systemd/resolve/stub-resolv.conf /etc/resolv.conf
    sudo rm -f /etc/systemd/network/20-ethernet.network
    install_hyper
}

main "$@"
